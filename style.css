@import url('https://fonts.googleapis.com/css2?family=EB+Garamond:ital,wght@0,400..700;1,400..700&family=Oswald:wght@200;300;400&display=swap');

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

:root {
    --color-primary: hsl(120, 25%, 5%);
    --color-bg: hsl(120, 25%, 95%);
    --color-accent: hsl(0, 95%, 40%);
    --color-accent-dark: hsl(0, 90%, 20%);
    --color-accent-light: hsl(0, 100%, 60%);
    
    --font-titles: "Oswald", sans-serif;
    --font-primary: "EB Garamond", serif;
    --font-size: clamp(1.25rem, 1rem + 3vw, 1.75rem);
    --font-size-sm: calc(0.8 * var(--font-size));
    --font-size-lg: calc(1.25 * var(--font-size));
    --line-height: 1.5;

}

body {
    width: 100%;
    background-color: var(--color-bg);
    font-family: var(--font-primary);
    font-size: var(--font-size);
    color: var(--color-primary);
    line-height: var(--line-height);
}

h1 {
    font-family: var(--font-titles);
    border-block-end: 0.25rem solid var(--color-accent);
    margin-block-end: 1rem;
}

button {
    font-family: var(--font-titles);
    font-size: var(--font-size-sm);
    padding: 0.5em 1em;
    background-color: var(--color-accent);
    border: none;
    border-radius: 0.25em;
    color: var(--color-bg);
    text-transform: uppercase;
}

button:hover, button:focus {
    background-color: var(--color-accent-dark);
}

header, main {
    margin-inline: auto;
    padding-inline: 1rem;
    width: 100%;
    max-width: 70ch;
    margin-block-end: 1em;
}

header {
    display: grid;
    grid-template-columns: repeat(2,1fr);
    justify-content: space-between;
    align-items: baseline;
}

.page-title, .description { grid-column: 1/-1;}

.description {
    font-size: var(--font-size-sm);
    line-height: 1.2;
    margin-block-end: 1em;
}

.resolution-form, .resolution {
    font-family: var(--font-titles);
    font-weight: 300;
    font-size: var(--font-size-sm);
}

.resolution {
    padding-inline: 0.5rem;
    padding-block: 0;
}

.clear {justify-self: end;}

.etch-a-sketch {
    background-color: var(--color-accent);
    position: relative;
    width: min-content;
    margin-inline: auto;
    padding: 4rem 4rem 8rem;
    box-shadow: inset 5px 5px 5px 0 var(--color-accent-light), inset -5px -5px 5px 1px var(--color-accent-dark);
}

.shake {
    --animation-timing: 500ms;
    animation: shake var(--animation-timing) ease-in-out forwards;
}

.screen {
    background-color: hsl(0, 0%, 80%);
    display: flex;
    flex-wrap: wrap;
    box-shadow: inset 0 0 2px 2px var(--color-accent-dark);
}


@keyframes shake {
    20% {transform: translateY(-3%);}
    40% {transform: translateY(3%);}
    60% {transform: translateY(-5%);}
    80% {transform: translateY(5%);}
    100% {transform: translateY(0);}
}



.pixel {
    --opacity: 0;
    opacity: var(--opacity);
}

.knob {
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    background-color: white;
    background-image: radial-gradient(at 50% 20%, hsl(0, 0%, 80%) 0.1em, white 0);
    position: absolute;
    inset-block-end: 2.5rem;
    /* animation: rotate 1s linear infinite; */
}

/* need this so the shadow on the knobs doesn't rotate with them */
.knob::after{
    content: "";
    width: 100%;
    height: 100%;
    border-radius: 50%;
    box-shadow: 5px 5px 2px 2px darkred;
    position: absolute;
    /* animation: rotate 1s linear infinite reverse; */
}
.horizontal {inset-inline-start: 2.5rem;}
.vertical { inset-inline-end: 2.5rem; }

@keyframes rotate {
    to {transform: rotate(1turn)}
}